# Как правило вы будете создавать динамические списки; это означает, что во 
# время выполнения программы в созданном вами списке будут добавлятся и удалятся 
# элементы. Например, вы можете создать игру в которой игрок должен стрелять по 
# кораблям космических захватчиков. Исходный набор кораблей сохраняется в 
# списке; каждый раз, когда вы сбиваете корабль, он удаляется из списка. Каждый 
# раз, когда на экране появляется новый враг, он включается в список. Длина 
# списка кораблей будет уменьшаться и увеличиваться по ходу игры.

motorcycles = [] # пустой список
motorcycles = ['honda', 'yamaha', 'suzuki']
print(motorcycles)

# Значение первого элемента заменяется строкой 'ducati'.

motorcycles[0] = 'ducati' # так можно изменить элемент списка
print(motorcycles)

# Новые элементы могут добавлятся в списки по разным причинам: например, для 
# появления на экране новых космических кораблей, включения новых данных в 
# визуализацию или добавления новых зарегистрированных пользователей на 
# построенный вами сайт.

# Простейший способ добавления новых элементов в список - присоединение элемента 
# в конец списка.

motorcycles.append('honda') # добавление элемента в конец список
print(motorcycles)

# Метод insert() позволяет добавить новый элемент в произвольную позицию списка.
# Для этого следует указать индекс и значение нового элемента.

motorcycles.insert(0, 'yamaha2') # вставка элемента в список
print(motorcycles)

# Нередко возникает необходимость в удалении одного или нескольких элементов из 
# списка. Например, когда игрок сбивает корабль пришельца, этот корабль стоит 
# удалить из списка активных врагов. Или когда пользователь решает удалить свою 
# учетную запись в созданном вами веб-приложении, этот пользователь должен быть 
# удален из списка активных пользователей. Элементы удаляются из списка позиции 
# или по значению.

# Если вам известна позиция элемента, который должен быть удален из списка, 
# воспользуйтесь командой del.

del motorcycles[0] # удаление элемента списка по индексу
print(motorcycles)

# Иногда значение, удаляемое из списка, должно как-то использоватся. Допустим, 
# вы хотите получить координаты x и y только что сбитого корабля пришельцев, что 
# бы изобразить взрыв в этой позиции. В веб-приложении пользователь, удаленный 
# из списка активных участников, может быть добавлен в список неактивных, и т.д. 

# Метод pop() удаляет последний элемент из списка, но позволяет работать с ним 
# после удаления.

popped_motocycle = motorcycles.pop()

# Вызов pop() может использоватся для удаления элемента в произвольной позиции 
# списка; для этого следет указать индекс удаляемого элемента в круглых скобках.

first_owned = motorcycles.pop(0)
print(f"The first motorcycle I owned was a {first_owned.title()}.")

# Иногда позиция удаляемого элемента неизвестна. Если вы знаете только значение
# элемента, используйте метод remove().

motorcycles.remove('suzuki') # удаление элемента списка по значению 
print(motorcycles)